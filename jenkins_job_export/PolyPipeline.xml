<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.8"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.8">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.4">
      <projectUrl>https://github.com/pns-isa-devops-1819/projet-isadevops-19-isa-devops-19-e.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <jenkins.triggers.ReverseBuildTrigger>
          <spec></spec>
          <upstreamProjects>AlumnWebService,  OrganisationWebService, PayWebService</upstreamProjects>
          <threshold>
            <name>SUCCESS</name>
            <ordinal>0</ordinal>
            <color>BLUE</color>
            <completeBuild>true</completeBuild>
          </threshold>
        </jenkins.triggers.ReverseBuildTrigger>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.29.4">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.67">
    <script>pipeline {
    agent any
    tools {
        maven &apos;M3&apos;
        jdk &apos;jdk8&apos;
    }
    environment {
        MAVEN_SETTINGS_XML = credentials(&apos;maven-settings&apos;)
        registry = &apos;lucasoms/team-e:polydiploma-backend&apos;
        registryCredential = &apos;dockerrepo&apos;
    }
    stages {
        stage(&apos;Checkout&apos;) {
            steps{
                git url: &apos;https://github.com/pns-isa-devops-1819/projet-isadevops-19-isa-devops-19-e.git&apos;,
                credentialsId: &apos;e32e1eb9-6a90-4dd6-8069-d2465ea26f1a&apos;
            }
        }
        stage(&apos;Build&apos;) {
            steps {
                sh &apos;rm -rf ?/.m2/repository/fr&apos;
                sh &apos;mvn -B -U -f ./PolyDiploma/pom.xml -s $MAVEN_SETTINGS_XML clean package &apos;
            }
        }
        // stage(&apos;Test&apos;) {
        //     steps {
        //         sh &apos;mvn -s $MAVEN_SETTINGS_XML test&apos;
        //     }
        // }
        // stage(&apos;Create .war&apos;) {
        //     steps {
        //         sh &apos;mvn -f ./PolyDiploma/pom.xml -s $MAVEN_SETTINGS_XML install&apos;
        //     }
        // }
        stage(&apos;Build Docker Image&apos;) {
            steps {
                sh &apos;cp ./PolyDiploma/target/polydiploma-backend.war ./PolyDiploma/docker/.&apos;
                script {
                    app = docker.build(registry, &quot;./PolyDiploma/docker&quot;)
                }
            }
        }
        stage(&apos;Deploy Docker Image&apos;) {
             steps{
                script {
                    docker.withRegistry( &apos;&apos;, registryCredential) {
                        app.push()
                    }
                }
            }
        }
        stage(&apos;Remove Unused docker image&apos;) {
            steps{
                sh &quot;docker rmi $registry&quot;
            }
        }
    }
}  </script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <quietPeriod>10</quietPeriod>
  <disabled>false</disabled>
</flow-definition>