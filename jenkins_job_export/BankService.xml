<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.8"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.8">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.29.4">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.4">
      <projectUrl>https://github.com/pns-isa-devops-1819/BankService.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.67">
    <script>def app

pipeline {
    environment {
        registry = &apos;lucasoms/team-e:bank-service&apos;
        registryCredential = &apos;dockerrepo&apos;
    }
    agent none
    stages {
        stage(&apos;Checkout&apos;) {
            agent any
            steps {
                git credentialsId: &apos;e32e1eb9-6a90-4dd6-8069-d2465ea26f1a&apos;, url: &apos;https://github.com/pns-isa-devops-1819/BankService.git&apos;
            }
        }
    
        stage(&apos;Build&apos;) {
             agent { 
                docker { 
                    image &apos;mono&apos;
                    registryUrl &apos;&apos;
                }
             }
            steps {
                sh &apos;chmod +x ./compile.sh&apos;
                sh &apos;./compile.sh&apos;
            }
        }
        stage(&apos;Docker build&apos;) {
            agent any
            steps {
                script {
                    app = docker.build(registry, &quot;./docker/&quot;)
                }
            }
        }
        stage(&apos;Docker publish&apos;) {
             steps{
                script {
                    docker.withRegistry( &apos;&apos;, registryCredential) {
                        app.push()
                    }
                }
            }
        }
        stage(&apos;Remove docker image once published&apos;) {
            agent any
            steps{
                sh &quot;docker rmi $registry&quot;
            }
        }
        
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>